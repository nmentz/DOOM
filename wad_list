#/bin/python3

import struct
import sys

def list_wad_lumps(filename):
    with open(filename, 'rb') as f:
        # Read header: 4-byte id, 4-byte num lumps, 4-byte dir offset
        header = f.read(12)
        if len(header) < 12:
            print("Not a valid WAD file (header too short).")
            return

        wad_type, num_lumps, dir_offset = struct.unpack('<4sII', header)
        print(f"WAD type: {wad_type.decode('ascii')}")
        print(f"Number of lumps: {num_lumps}")
        print(f"Directory offset: {dir_offset}")

        # Seek to directory
        f.seek(dir_offset)

        # Each directory entry: 4-byte filepos, 4-byte size, 8-byte name
        lumps = []
        for i in range(num_lumps):
            entry = f.read(16)
            if len(entry) < 16:
                print("Directory entry truncated.")
                break

            filepos, size, name_bytes = struct.unpack('<II8s', entry)
            name = name_bytes.decode('ascii').rstrip('\0')
            lumps.append((name, filepos, size))

        print("\nLumps:")
        for name, filepos, size in lumps:
            print(f"{name:12} Offset: {filepos:8} Size: {size}")

if __name__ == '__main__':
    if len(sys.argv) < 2:
        print("Usage: python wad_list.py DOOM.WAD")
        sys.exit(1)
    list_wad_lumps(sys.argv[1])
